// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String    //key to User.id
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id      String          @id @default(cuid())
  email       String      @unique
  password    String?
  name        String?
  folders     Folder[]
  accounts    Account[]
  createdAt   DateTime    @default(now())
}

model Folder {
  id          String      @id @default(cuid())
  name        String
  user        User?       @relation(fields: [userId], references: [id])
  userId      String?
  parentId    String?
  parent      Folder?     @relation("Subfolders", fields: [parentId], references: [id])
  Subfolders  Folder[]    @relation("Subfolders")
  bookmarks   Bookmark[]
}

model Bookmark {
  id          String      @id @default(cuid())
  title       String
  url         String
  description String?
  folderId    String
  folder      Folder      @relation(fields: [folderId], references: [id])
  createdAt   DateTime    @default(now())
}
